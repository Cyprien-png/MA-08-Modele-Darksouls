-- MySQL Script generated by MySQL Workbench
-- Fri Dec 18 14:15:35 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`accounts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pseudo` VARCHAR(45) NULL,
  `mail` VARCHAR(70) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueAccount` (`pseudo` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`statistics`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`statistics` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `value` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueStatistic` (`type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`bonfires`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`bonfires` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` INT NULL,
  `unique name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueBonfire` (`number` ASC, `unique name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`progressions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`progressions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nb bonfire` INT NULL,
  `nb defeated boss` INT NULL,
  `bonfires_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueProgression` (`nb bonfire` ASC, `nb defeated boss` ASC) VISIBLE,
  INDEX `fk_progressions_bonfires1_idx` (`bonfires_id` ASC) VISIBLE,
  CONSTRAINT `fk_progressions_bonfires1`
    FOREIGN KEY (`bonfires_id`)
    REFERENCES `mydb`.`bonfires` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`characters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`characters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `accounts_id` INT NOT NULL,
  `statistics_id` INT NOT NULL,
  `progressions_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueCharacter` (`name` ASC) VISIBLE,
  INDEX `fk_characters_accounts_idx` (`accounts_id` ASC) VISIBLE,
  INDEX `fk_characters_statistics1_idx` (`statistics_id` ASC) VISIBLE,
  INDEX `fk_characters_progressions1_idx` (`progressions_id` ASC) VISIBLE,
  CONSTRAINT `fk_characters_accounts`
    FOREIGN KEY (`accounts_id`)
    REFERENCES `mydb`.`accounts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_statistics1`
    FOREIGN KEY (`statistics_id`)
    REFERENCES `mydb`.`statistics` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_progressions1`
    FOREIGN KEY (`progressions_id`)
    REFERENCES `mydb`.`progressions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`weapons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`weapons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  `strenght necessary` INT NULL,
  `damage` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueWeapon` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`armors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`armors` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `Vigor necessary` INT NULL,
  `resistance` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueArmor` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`areas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`areas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `nb bonfires` INT NULL,
  `nb bosses` INT NULL,
  `bonfires_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueArea` (`name` ASC) VISIBLE,
  INDEX `fk_areas_bonfires1_idx` (`bonfires_id` ASC) VISIBLE,
  CONSTRAINT `fk_areas_bonfires1`
    FOREIGN KEY (`bonfires_id`)
    REFERENCES `mydb`.`bonfires` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`monsters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`monsters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `boss` TINYINT NULL,
  `name` VARCHAR(45) NULL,
  `health` INT NULL,
  `damage` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UniqueMonster` (`type` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`statistics_has_armors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`statistics_has_armors` (
  `statistics_id` INT NOT NULL,
  `armors_id` INT NOT NULL,
  PRIMARY KEY (`statistics_id`, `armors_id`),
  INDEX `fk_statistics_has_armors_armors1_idx` (`armors_id` ASC) VISIBLE,
  INDEX `fk_statistics_has_armors_statistics1_idx` (`statistics_id` ASC) VISIBLE,
  CONSTRAINT `fk_statistics_has_armors_statistics1`
    FOREIGN KEY (`statistics_id`)
    REFERENCES `mydb`.`statistics` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_statistics_has_armors_armors1`
    FOREIGN KEY (`armors_id`)
    REFERENCES `mydb`.`armors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`statistics_has_weapons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`statistics_has_weapons` (
  `statistics_id` INT NOT NULL,
  `weapons_id` INT NOT NULL,
  PRIMARY KEY (`statistics_id`, `weapons_id`),
  INDEX `fk_statistics_has_weapons_weapons1_idx` (`weapons_id` ASC) VISIBLE,
  INDEX `fk_statistics_has_weapons_statistics1_idx` (`statistics_id` ASC) VISIBLE,
  CONSTRAINT `fk_statistics_has_weapons_statistics1`
    FOREIGN KEY (`statistics_id`)
    REFERENCES `mydb`.`statistics` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_statistics_has_weapons_weapons1`
    FOREIGN KEY (`weapons_id`)
    REFERENCES `mydb`.`weapons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`areas_has_monsters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`areas_has_monsters` (
  `areas_id` INT NOT NULL,
  `monsters_id` INT NOT NULL,
  PRIMARY KEY (`areas_id`, `monsters_id`),
  INDEX `fk_areas_has_monsters_monsters1_idx` (`monsters_id` ASC) VISIBLE,
  INDEX `fk_areas_has_monsters_areas1_idx` (`areas_id` ASC) VISIBLE,
  CONSTRAINT `fk_areas_has_monsters_areas1`
    FOREIGN KEY (`areas_id`)
    REFERENCES `mydb`.`areas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_areas_has_monsters_monsters1`
    FOREIGN KEY (`monsters_id`)
    REFERENCES `mydb`.`monsters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
